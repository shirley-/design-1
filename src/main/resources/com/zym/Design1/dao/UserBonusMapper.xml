<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zym.Design1.dao.UserBonusMapper">
  <resultMap id="BaseResultMap" type="com.zym.Design1.entity.UserBonus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="frozen_coin" jdbcType="DECIMAL" property="frozenCoin" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="daily_bonus" jdbcType="DECIMAL" property="dailyBonus" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="trade_id" jdbcType="BIGINT" property="tradeId" />
    <result column="rule_id" jdbcType="INTEGER" property="ruleId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    id, user_id, frozen_coin, start_date, end_date, daily_bonus, type, trade_id, rule_id, 
    state, version
  </sql>
  <select id="selectByExample" parameterType="com.zym.Design1.entity.UserBonusExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_bonus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    delete from user_bonus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zym.Design1.entity.UserBonusExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    delete from user_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zym.Design1.entity.UserBonus" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    insert into user_bonus (user_id, frozen_coin, start_date, 
      end_date, daily_bonus, type, 
      trade_id, rule_id, state, 
      version)
    values (#{userId,jdbcType=INTEGER}, #{frozenCoin,jdbcType=DECIMAL}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{dailyBonus,jdbcType=DECIMAL}, #{type,jdbcType=CHAR}, 
      #{tradeId,jdbcType=BIGINT}, #{ruleId,jdbcType=INTEGER}, #{state,jdbcType=CHAR}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zym.Design1.entity.UserBonus" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    insert into user_bonus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="frozenCoin != null">
        frozen_coin,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="dailyBonus != null">
        daily_bonus,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="frozenCoin != null">
        #{frozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyBonus != null">
        #{dailyBonus,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zym.Design1.entity.UserBonusExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select count(*) from user_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update user_bonus
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.frozenCoin != null">
        frozen_coin = #{record.frozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dailyBonus != null">
        daily_bonus = #{record.dailyBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=BIGINT},
      </if>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update user_bonus
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      frozen_coin = #{record.frozenCoin,jdbcType=DECIMAL},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      daily_bonus = #{record.dailyBonus,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=CHAR},
      trade_id = #{record.tradeId,jdbcType=BIGINT},
      rule_id = #{record.ruleId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=CHAR},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zym.Design1.entity.UserBonus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update user_bonus
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="frozenCoin != null">
        frozen_coin = #{frozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyBonus != null">
        daily_bonus = #{dailyBonus,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zym.Design1.entity.UserBonus">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update user_bonus
    set user_id = #{userId,jdbcType=INTEGER},
      frozen_coin = #{frozenCoin,jdbcType=DECIMAL},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      daily_bonus = #{dailyBonus,jdbcType=DECIMAL},
      type = #{type,jdbcType=CHAR},
      trade_id = #{tradeId,jdbcType=BIGINT},
      rule_id = #{ruleId,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>