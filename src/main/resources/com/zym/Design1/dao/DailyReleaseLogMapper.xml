<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zym.Design1.dao.DailyReleaseLogMapper">
  <resultMap id="BaseResultMap" type="com.zym.Design1.entity.DailyReleaseLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="entity_id" jdbcType="INTEGER" property="entityId" />
    <result column="entity_user_level" jdbcType="INTEGER" property="entityUserLevel" />
    <result column="ecoin_bonus" jdbcType="DECIMAL" property="ecoinBonus" />
    <result column="unfrozen_coin" jdbcType="DECIMAL" property="unfrozenCoin" />
    <result column="after_total_coin" jdbcType="DECIMAL" property="afterTotalCoin" />
    <result column="after_tradable_coin" jdbcType="DECIMAL" property="afterTradableCoin" />
    <result column="after_release_coin" jdbcType="DECIMAL" property="afterReleaseCoin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    id, user_id, date, type, entity_id, entity_user_level, ecoin_bonus, unfrozen_coin, 
    after_total_coin, after_tradable_coin, after_release_coin
  </sql>
  <select id="selectByExample" parameterType="com.zym.Design1.entity.DailyReleaseLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from daily_release_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from daily_release_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    delete from daily_release_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zym.Design1.entity.DailyReleaseLogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    delete from daily_release_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zym.Design1.entity.DailyReleaseLog" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    insert into daily_release_log (user_id, date, type, 
      entity_id, entity_user_level, ecoin_bonus, 
      unfrozen_coin, after_total_coin, after_tradable_coin, 
      after_release_coin)
    values (#{userId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{type,jdbcType=CHAR}, 
      #{entityId,jdbcType=INTEGER}, #{entityUserLevel,jdbcType=INTEGER}, #{ecoinBonus,jdbcType=DECIMAL}, 
      #{unfrozenCoin,jdbcType=DECIMAL}, #{afterTotalCoin,jdbcType=DECIMAL}, #{afterTradableCoin,jdbcType=DECIMAL}, 
      #{afterReleaseCoin,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zym.Design1.entity.DailyReleaseLog" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    insert into daily_release_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="entityId != null">
        entity_id,
      </if>
      <if test="entityUserLevel != null">
        entity_user_level,
      </if>
      <if test="ecoinBonus != null">
        ecoin_bonus,
      </if>
      <if test="unfrozenCoin != null">
        unfrozen_coin,
      </if>
      <if test="afterTotalCoin != null">
        after_total_coin,
      </if>
      <if test="afterTradableCoin != null">
        after_tradable_coin,
      </if>
      <if test="afterReleaseCoin != null">
        after_release_coin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="entityId != null">
        #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entityUserLevel != null">
        #{entityUserLevel,jdbcType=INTEGER},
      </if>
      <if test="ecoinBonus != null">
        #{ecoinBonus,jdbcType=DECIMAL},
      </if>
      <if test="unfrozenCoin != null">
        #{unfrozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterTotalCoin != null">
        #{afterTotalCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterTradableCoin != null">
        #{afterTradableCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterReleaseCoin != null">
        #{afterReleaseCoin,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zym.Design1.entity.DailyReleaseLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    select count(*) from daily_release_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update daily_release_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.entityId != null">
        entity_id = #{record.entityId,jdbcType=INTEGER},
      </if>
      <if test="record.entityUserLevel != null">
        entity_user_level = #{record.entityUserLevel,jdbcType=INTEGER},
      </if>
      <if test="record.ecoinBonus != null">
        ecoin_bonus = #{record.ecoinBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.unfrozenCoin != null">
        unfrozen_coin = #{record.unfrozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="record.afterTotalCoin != null">
        after_total_coin = #{record.afterTotalCoin,jdbcType=DECIMAL},
      </if>
      <if test="record.afterTradableCoin != null">
        after_tradable_coin = #{record.afterTradableCoin,jdbcType=DECIMAL},
      </if>
      <if test="record.afterReleaseCoin != null">
        after_release_coin = #{record.afterReleaseCoin,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update daily_release_log
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=CHAR},
      entity_id = #{record.entityId,jdbcType=INTEGER},
      entity_user_level = #{record.entityUserLevel,jdbcType=INTEGER},
      ecoin_bonus = #{record.ecoinBonus,jdbcType=DECIMAL},
      unfrozen_coin = #{record.unfrozenCoin,jdbcType=DECIMAL},
      after_total_coin = #{record.afterTotalCoin,jdbcType=DECIMAL},
      after_tradable_coin = #{record.afterTradableCoin,jdbcType=DECIMAL},
      after_release_coin = #{record.afterReleaseCoin,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zym.Design1.entity.DailyReleaseLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update daily_release_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="entityId != null">
        entity_id = #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entityUserLevel != null">
        entity_user_level = #{entityUserLevel,jdbcType=INTEGER},
      </if>
      <if test="ecoinBonus != null">
        ecoin_bonus = #{ecoinBonus,jdbcType=DECIMAL},
      </if>
      <if test="unfrozenCoin != null">
        unfrozen_coin = #{unfrozenCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterTotalCoin != null">
        after_total_coin = #{afterTotalCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterTradableCoin != null">
        after_tradable_coin = #{afterTradableCoin,jdbcType=DECIMAL},
      </if>
      <if test="afterReleaseCoin != null">
        after_release_coin = #{afterReleaseCoin,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zym.Design1.entity.DailyReleaseLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 01 23:51:54 CST 2018.
    -->
    update daily_release_log
    set user_id = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=CHAR},
      entity_id = #{entityId,jdbcType=INTEGER},
      entity_user_level = #{entityUserLevel,jdbcType=INTEGER},
      ecoin_bonus = #{ecoinBonus,jdbcType=DECIMAL},
      unfrozen_coin = #{unfrozenCoin,jdbcType=DECIMAL},
      after_total_coin = #{afterTotalCoin,jdbcType=DECIMAL},
      after_tradable_coin = #{afterTradableCoin,jdbcType=DECIMAL},
      after_release_coin = #{afterReleaseCoin,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>